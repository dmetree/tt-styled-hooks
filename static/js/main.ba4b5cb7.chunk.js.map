{"version":3,"sources":["components/elements/Elements.js","components/Post.js","components/Search.js","App.js","index.js"],"names":["SPost","styled","div","Title","h1","Button","button","props","theme","font","Input","input","SearchField","ArticlesList","Post","post","useState","author","setAuthor","useEffect","fetch","userId","then","res","json","data","catch","err","console","log","title","body","name","username","Search","searchText","text","setText","className","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","posts","setPosts","term","setTerm","postsLayout","filterByTerm","filter","toLowerCase","includes","map","key","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yhDAEO,IAAMA,EAAQC,IAAOC,IAAV,KAULC,EAAQF,IAAOG,GAAV,KASLC,EAASJ,IAAOK,OAAV,KACF,SAACC,GAAD,OAAWA,EAAMC,MAAMC,QAkB3BC,EAAQT,IAAOU,MAAV,KAULC,EAAcX,IAAOC,IAAV,KAOXW,EAAeZ,IAAOC,IAAV,KC3BVY,MAxBf,YAAyB,IAATC,EAAQ,EAARA,KAAQ,EAEQC,mBAAS,IAFjB,mBAEbC,EAFa,KAELC,EAFK,KAapB,OATAC,qBAAU,WACNC,MAAM,8CAAD,OAA+CL,EAAKM,SACpDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFP,EAAUO,MAEbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC/B,IAGC,kBAAC3B,EAAD,KACI,kBAACG,EAAD,KAAQY,EAAKe,OACb,2BAAIf,EAAKgB,MACT,+BACI,qCAAWd,EAAOe,KAAlB,QAA6Bf,EAAOgB,aCOrCC,MA1Bf,YAAiC,IAAfC,EAAc,EAAdA,WAAc,EAEJnB,mBAAS,IAFL,mBAErBoB,EAFqB,KAEfC,EAFe,KAS5B,OACI,yBAAKC,UAAU,IACX,0BAAMC,SAPG,SAACC,GACdA,EAAEC,iBACFN,EAAWC,IAKmBE,UAAU,IAChC,kBAAC1B,EAAD,CAAa0B,UAAU,IACnB,kBAAC5B,EAAD,CAAOgC,SAAU,SAAAF,GAAC,OAAIH,EAAQG,EAAEG,OAAOC,QACnCN,UAAU,GACVO,KAAK,OACLC,YAAY,cAChB,kBAACzC,EAAD,CACIiC,UAAU,GACVO,KAAK,UAFT,cCgCLE,EA9CH,WAAO,IAAD,EAEU/B,qBAFV,mBAETgC,EAFS,KAEFC,EAFE,OAGQjC,mBAAS,IAHjB,mBAGTkC,EAHS,KAGHC,EAHG,KAOhBhC,qBAAU,WACRC,MAAM,8CACHE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJwB,EAASxB,MAEVC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IAIH,IAAIyB,EAAc,2CAElB,GAAIJ,EAAO,CACT,IAAIK,EAAeL,EAAMM,QAAO,SAAAvC,GAC9B,OAAOA,EAAKe,MAAMyB,cAAcC,SAASN,EAAKK,kBAGhDH,EAAc,kBAACvC,EAAD,CAAcyB,UAAU,IACnCe,EAAaI,KAAI,SAAA1C,GAAI,OACpB,kBAAC,EAAD,CAAM2C,IAAK3C,EAAK4C,GACd5C,KAAMA,QAOd,OACE,yBAAKuB,UAAU,OACb,kBAAC,EAAD,CACEH,WAAY,SAACC,GAAD,OAAUe,EAAQf,MAChC,6BAAMgB,KC3CZQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ba4b5cb7.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const SPost = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 30%;\n  background-color: ivory;\n  margin: 10px 0px;\n  padding: 10px;\n`\n\n\nexport const Title = styled.h1`\n  font-size: 16px;\n  text-transform: uppercase;\n  color: black;\n  font-weight: bold;\n  margin: 10px auto;\n`;\n\n\nexport const Button = styled.button`\n  font-family: ${(props) => props.theme.font};\n  background-color: ivory;\n  width: 150px;\n  border: 1px solid transparent;\n  height: 50px;\n  border-radius: 10px;\n  text-transform: uppercase;\n  margin-left: 15px;\n  cursor: pointer;\n\n  &:hover {\n    border: 1px solid transparent;\n    background-color: grey;\n    color: white;\n  }\n`;\n\n\nexport const Input = styled.input`\n  width: 350px;\n  height: 40px;\n  border: none;\n  background-color: ivory;\n  border-radius: 10px;\n  padding: 5px 10px;\n  font-size: 16px;\n`;\n\nexport const SearchField = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 15px 0px;\n`;\n\n\nexport const ArticlesList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  margin: 10px 20px;\n  align-items: flex-start;\n`;","import React, { useState, useEffect } from 'react';\nimport { SPost, Title } from './elements/Elements';\n\n\n\n\nfunction Post({ post }) {\n    \n    const [author, setAuthor] = useState('');\n\n    useEffect(() => {\n        fetch(`https://jsonplaceholder.typicode.com/users/${post.userId}`)\n            .then(res => res.json())\n            .then(data => {\n                setAuthor(data)\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    return (\n        <SPost>\n            <Title>{post.title}</Title>\n            <p>{post.body}</p>\n            <small>\n                <small>By {author.name} AKA {author.username}</small>\n            </small>\n        </SPost>\n    )\n}\n\nexport default Post;","\nimport React, { useState } from 'react'\nimport { Button, Input, SearchField } from \"./elements/Elements\";\n\n\nfunction Search({ searchText }) {\n\n    const [text, setText] = useState('');\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        searchText(text);\n    }\n\n    return (\n        <div className=\"\">\n            <form onSubmit={onSubmit} className=\"\">\n                <SearchField className=\"\">\n                    <Input onChange={e => setText(e.target.value)}\n                        className=\"\"\n                        type=\"text\"\n                        placeholder=\"Search...\"></Input>\n                    <Button\n                        className=\"\"\n                        type=\"submit\">Search</Button>\n                </SearchField>\n            </form>\n        </div>\n    )\n}\n\nexport default Search","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Post from './components/Post'\nimport Search from './components/Search'\n\nimport { ArticlesList } from './components/elements/Elements'\n\nconst App = () => {\n\n  const [posts, setPosts] = useState();\n  const [term, setTerm] = useState('');\n\n\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(res => res.json())\n      .then(data => {\n        // console.log(data)\n        setPosts(data)\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n\n\n  let postsLayout = <div>Loading...</div>\n\n  if (posts) {\n    let filterByTerm = posts.filter(post => {\n      return post.title.toLowerCase().includes(term.toLowerCase());\n    })\n\n    postsLayout = <ArticlesList className=\"\">\n      {filterByTerm.map(post => (\n        <Post key={post.id}\n          post={post} />\n      ))}\n    </ArticlesList>\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <Search\n        searchText={(text) => setTerm(text)} />\n      <div>{postsLayout}</div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}